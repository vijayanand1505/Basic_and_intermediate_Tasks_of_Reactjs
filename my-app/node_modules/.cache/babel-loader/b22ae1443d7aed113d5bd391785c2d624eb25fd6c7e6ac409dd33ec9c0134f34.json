{"ast":null,"code":"var _jsxFileName = \"/Users/vijayanand/Desktop/New Task and CRUD/my-app/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const wordsArray = [\"Hello\", \"World\", \"React\", \"Typing\", \"Effect\"];\n  const [wordIndex, setWordIndex] = useState(0);\n  const [charIndex, setCharIndex] = useState(0);\n  const [currentWord, setCurrentWord] = useState(\"\");\n  const typingDelay = 200; // Delay between typing each character\n  const newTextDelay = 1000; // Delay before typing the next word\n\n  useEffect(() => {\n    const type = () => {\n      if (charIndex < wordsArray[wordIndex].length) {\n        setCurrentWord(prev => prev + wordsArray[wordIndex][charIndex]);\n        setCharIndex(prev => prev + 1);\n      }\n    };\n    if (charIndex === wordsArray[wordIndex].length) {\n      setTimeout(() => {\n        setCharIndex(0);\n        setCurrentWord(\"\");\n        setWordIndex(prev => (prev + 1) % wordsArray.length);\n      }, newTextDelay);\n    } else {\n      const typingInterval = setInterval(type, typingDelay);\n      return () => clearInterval(typingInterval);\n    }\n  }, [charIndex, wordIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Typing Effect:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"This is the typing effect \", currentWord]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 56\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"QTwQ7zqZn6QNvqgfGkkhHj5SHyI=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Home","_s","wordsArray","wordIndex","setWordIndex","charIndex","setCharIndex","currentWord","setCurrentWord","typingDelay","newTextDelay","type","length","prev","setTimeout","typingInterval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vijayanand/Desktop/New Task and CRUD/my-app/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport const Home = () => {\n  const wordsArray = [\"Hello\", \"World\", \"React\", \"Typing\", \"Effect\"];\n  const [wordIndex, setWordIndex] = useState(0);\n  const [charIndex, setCharIndex] = useState(0);\n  const [currentWord, setCurrentWord] = useState(\"\");\n  const typingDelay = 200; // Delay between typing each character\n  const newTextDelay = 1000; // Delay before typing the next word\n\n  useEffect(() => {\n    const type = () => {\n      if (charIndex < wordsArray[wordIndex].length) {\n        setCurrentWord((prev) => prev + wordsArray[wordIndex][charIndex]);\n        setCharIndex((prev) => prev + 1);\n      }\n    };\n\n    if (charIndex === wordsArray[wordIndex].length) {\n      setTimeout(() => {\n        setCharIndex(0);\n        setCurrentWord(\"\");\n        setWordIndex((prev) => (prev + 1) % wordsArray.length);\n      }, newTextDelay);\n    } else {\n      const typingInterval = setInterval(type, typingDelay);\n\n      return () => clearInterval(typingInterval);\n    }\n  }, [charIndex, wordIndex]);\n\n  return (\n    <div>\n      <br />\n      <h1>Typing Effect:</h1>\n      <h4>This is the typing effect {currentWord}</h4> <br />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,UAAU,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;EAClE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMY,WAAW,GAAG,GAAG,CAAC,CAAC;EACzB,MAAMC,YAAY,GAAG,IAAI,CAAC,CAAC;;EAE3Bd,SAAS,CAAC,MAAM;IACd,MAAMe,IAAI,GAAGA,CAAA,KAAM;MACjB,IAAIN,SAAS,GAAGH,UAAU,CAACC,SAAS,CAAC,CAACS,MAAM,EAAE;QAC5CJ,cAAc,CAAEK,IAAI,IAAKA,IAAI,GAAGX,UAAU,CAACC,SAAS,CAAC,CAACE,SAAS,CAAC,CAAC;QACjEC,YAAY,CAAEO,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAClC;IACF,CAAC;IAED,IAAIR,SAAS,KAAKH,UAAU,CAACC,SAAS,CAAC,CAACS,MAAM,EAAE;MAC9CE,UAAU,CAAC,MAAM;QACfR,YAAY,CAAC,CAAC,CAAC;QACfE,cAAc,CAAC,EAAE,CAAC;QAClBJ,YAAY,CAAES,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIX,UAAU,CAACU,MAAM,CAAC;MACxD,CAAC,EAAEF,YAAY,CAAC;IAClB,CAAC,MAAM;MACL,MAAMK,cAAc,GAAGC,WAAW,CAACL,IAAI,EAAEF,WAAW,CAAC;MAErD,OAAO,MAAMQ,aAAa,CAACF,cAAc,CAAC;IAC5C;EACF,CAAC,EAAE,CAACV,SAAS,EAAEF,SAAS,CAAC,CAAC;EAE1B,oBACEJ,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNvB,OAAA;MAAAmB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBvB,OAAA;MAAAmB,QAAA,GAAI,4BAA0B,EAACX,WAAW;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,eAAAvB,OAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAACrB,EAAA,CApCWD,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}