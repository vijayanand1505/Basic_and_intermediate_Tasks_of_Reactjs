{"ast":null,"code":"var _jsxFileName = \"/Users/vijayanand/Desktop/New/my-app/src/components/Time.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LiveTime() {\n  _s();\n  const [time, setTime] = useState(new Date());\n  const [formattedTime, setFormattedTime] = useState('');\n  const [formattedDate, setFormattedDate] = useState('');\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let date = new Date();\n      let hh = date.getHours();\n      let mm = date.getMinutes();\n      let ss = date.getSeconds();\n      let session = \"AM\";\n      if (hh === 0) {\n        hh = 12;\n      }\n      if (hh > 12) {\n        hh = hh - 12;\n        session = \"PM\";\n      }\n      hh = hh < 10 ? \"0\" + hh : hh;\n      mm = mm < 10 ? \"0\" + mm : mm;\n      ss = ss < 10 ? \"0\" + ss : ss;\n      let formattedTime = hh + \":\" + mm + \":\" + ss + \" \" + session;\n      setFormattedTime(formattedTime);\n      let formattedDate = date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear();\n      setFormattedDate(formattedDate);\n      setTime(new Date());\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"time-center\",\n        children: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"time-center\",\n        children: formattedTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"time-center\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"time-center\",\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(LiveTime, \"AnoGH35rg0vtl7YniqgGlimr+qY=\");\n_c = LiveTime;\nexport default LiveTime;\nvar _c;\n$RefreshReg$(_c, \"LiveTime\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LiveTime","_s","time","setTime","Date","formattedTime","setFormattedTime","formattedDate","setFormattedDate","interval","setInterval","date","hh","getHours","mm","getMinutes","ss","getSeconds","session","getDate","getMonth","getFullYear","clearInterval","class","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vijayanand/Desktop/New/my-app/src/components/Time.js"],"sourcesContent":["import React, { useState , useEffect } from 'react'\n\nfunction LiveTime(){\n\n    const [time, setTime] = useState(new Date());\n    const [formattedTime, setFormattedTime] = useState('');\n    const [formattedDate , setFormattedDate] = useState('');\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            let date = new Date();\n            let hh = date.getHours();\n            let mm = date.getMinutes();\n            let ss = date.getSeconds();\n            let session = \"AM\";\n        \n            if(hh === 0){\n                hh = 12;\n            }\n            if(hh > 12){\n                hh = hh - 12;\n                session = \"PM\";\n            }\n\n            hh = (hh < 10) ? \"0\" + hh : hh;\n            mm = (mm < 10) ? \"0\" + mm : mm;\n            ss = (ss < 10) ? \"0\" + ss : ss;\n                \n            let formattedTime = hh + \":\" + mm + \":\" + ss + \" \" + session;\n            setFormattedTime(formattedTime);\n\n            let formattedDate = date.getDate()+\"-\"+(date.getMonth()+1)+\"-\"+ date.getFullYear();\n            setFormattedDate(formattedDate);\n\n          setTime(new Date());\n        }, 1000);\n    \n        return () => {\n          clearInterval(interval);\n        };\n      }, []);\n\n\n  return (      \n    <div class=\"row\">\n    <div class=\"column\">\n        <h1 className='time-center'>Time</h1>\n        <h3 className='time-center'>{formattedTime}</h3>\n    </div>\n    <div class=\"column\">\n        <h2 className='time-center'>Date</h2>\n        <h3 className='time-center'>{formattedDate}</h3>\n    </div>\n    </div>\n\n  )\n}\n\nexport default LiveTime\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}